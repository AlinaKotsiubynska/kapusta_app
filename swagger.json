{
  "swagger": "2.0",
  "info": {
    "description": "Kapu$ta app endpoints document",
    "version": "1.0.0",
    "title": "Swagger Kapu$ta",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "alinakotsiubynska@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "app-kapusta.herokuapp.com",
  "basePath": "/api",
  "tags": [
    {
      "name": "user",
      "description": "Operations with user"
    },
    {
      "name": "category",
      "description": "Operations with categories"
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/users/signup": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Sign up user",
        "description": "Create new user",
        "operationId": "createUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Create user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Joi"
                    },
                    "email": {
                      "type": "string",
                      "example": "joi@mail.com"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "type": "string",
              "example": "Email in use"
            }
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Logs user into the system",
        "description": "",
        "operationId": "loginUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The user credentials for login",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Credentials"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiJ5dWJkYzU0czZuaG5rc2IifQ.xgaF7bGgi7sDbw7FZmh_9Epv-By1dkWDMuathb6R-1E"
                    },
                    "email": {
                      "type": "string",
                      "example": "joi@mail.com"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/users/logout": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Logs out current logged in user session",
        "description": "This can only be done by the logged in user.",
        "operationId": "logoutUser",
        "produces": [],
        "parameters": [],
        "responses": {
          "204": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string",
              "example": "Not authorized"
            }
          }
        },
        "security": [
          {
            "jwt_token": []
          }
        ]
      }
    },
    "/users/current": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get current user",
        "description": "This can only be done by the logged in user.",
        "operationId": "getCurrentUser",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Joi"
                    },
                    "email": {
                      "type": "string",
                      "example": "joi@mail.com"
                    },
                    "balance": {
                      "type": "number",
                      "example": 0
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string",
              "example": "Not authorized"
            }
          }
        },
        "security": [
          {
            "jwt_token": []
          }
        ]
      }
    },
    "/users/balance": {
      "patch": {
        "tags": [
          "user"
        ],
        "summary": "Update user balance",
        "description": "This can only be done by the logged in user.",
        "operationId": "updateUserBalance",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "balance": {
                  "type": "number",
                  "example": 5000
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "balance": {
                      "type": "number",
                      "example": 5000
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string",
              "example": "Not authorized"
            }
          }
        },
        "security": [
          {
            "jwt_token": []
          }
        ]
      }
    },
    "/users/verify": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Validate user email",
        "description": "This can only be done by the logged in user.",
        "operationId": "validateUser",
        "produces": [],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string",
              "example": "Not authorized"
            }
          }
        },
        "security": [
          {
            "jwt_token": []
          }
        ],
        "deprecated": true
      }
    },
    "/categories": {
      "get": {
        "tags": [
          "category"
        ],
        "summary": "Get all categories",
        "description": "This can only be done by the logged in user.",
        "operationId": "getAllCategories",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Category"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string",
              "example": "Not authorized"
            }
          }
        },
        "security": [
          {
            "jwt_token": []
          }
        ]
      },
      "post": {
        "tags": [
          "category"
        ],
        "summary": "Add new category",
        "description": "This can only be done by the logged in user.",
        "operationId": "addCategory",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "подарки"
                },
                "sign": {
                  "type": "string",
                  "example": "incomes"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "201 OK. Category added!"
                },
                "results": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "example": "df5v1D"
                    },
                    "name": {
                      "type": "string",
                      "example": "подарки"
                    },
                    "sign": {
                      "type": "string",
                      "example": "incomes"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string",
              "example": "Not authorized"
            }
          }
        },
        "security": [
          {
            "jwt_token": []
          }
        ]
      },
      "patch": {
        "tags": [
          "category"
        ],
        "summary": "Update category",
        "description": "This can only be done by the logged in user.",
        "operationId": "updateCategory",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "new подарки"
                },
                "sign": {
                  "type": "string",
                  "example": "incomes"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "201 OK. Category updated!"
                },
                "results": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "example": "df5v1D"
                    },
                    "name": {
                      "type": "string",
                      "example": "new подарки"
                    },
                    "sign": {
                      "type": "string",
                      "example": "incomes"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string",
              "example": "Not authorized"
            }
          }
        },
        "security": [
          {
            "jwt_token": []
          }
        ]
      }

    },
    "/categories/{signValue}": {
      "get": {
        "tags": [
          "category"
        ],
        "summary": "Get categories by sign",
        "description": "This can only be done by the logged in user.",
        "operationId": "getCategoriesBySign",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "signValue",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "200 OK."
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Category"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string",
              "example": "Not authorized"
            }
          }
        },
        "security": [
          {
            "jwt_token": []
          }
        ]
      }
    },
    "/transaction/expenses":{
      "post": {
        "tags": [
          "transaction"
        ],
        "summary": "Add new expenses transaction",
        "description": "This can only be done by the logged in user.",
        "operationId": "addExpensesTrans",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "owner": {
                  "type":"string",
                  "$ref": "#/definitions/User"
                },
                "name": {
                  "type": "string",
                  "example": "подарки"
                },
                "sign": {
                  "type": "string",
                  "example": "expenses"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "201 OK. Transaction added!"
                },
                "results": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "example": "df5v1D"
                    },
                    "name": {
                      "type": "string",
                      "example": "подарки"
                    },
                    "sign": {
                      "type": "string",
                      "example": "expenses"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string",
              "example": "Not authorized"
            }
          }
        },
        "security": [
          {
            "jwt_token": []
          }
        ]
      }
    },
    "/transaction/incomes":{
      "post": {
        "tags": [
          "transaction"
        ],
        "summary": "Add new incomes transaction",
        "description": "This can only be done by the logged in user.",
        "operationId": "addIncomesTrans",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "owner": {
                  "type":"string",
                  "$ref": "#/definitions/User"
                },
                "name": {
                  "type": "string",
                  "example": "подарки"
                },
                "sign": {
                  "type": "string",
                  "example": "incomes"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "201 OK. Transaction added!"
                },
                "results": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "example": "df5v1D"
                    },
                    "name": {
                      "type": "string",
                      "example": "подарки"
                    },
                    "sign": {
                      "type": "string",
                      "example": "incomes"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string",
              "example": "Not authorized"
            }
          }
        },
        "security": [
          {
            "jwt_token": []
          }
        ]
      }
    },
    "/transaction/{id}":{
      "delete": {
        "tags": [
          "transaction"
        ],
        "summary": "Deleted transaction by id",
        "description": "This can only be done by the logged in user.",
        "operationId": "deleteTrans",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The transaction id"
            
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction successfully deleted"
          },
          "404": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string",
              "example": "Not authorized"
            }
          }
        },
        "security": [
          {
            "jwt_token": []
          }
        ]
      }
    }
  },
  "securityDefinitions": {
    "jwt_token": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "definitions": {
    "Category": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "example": "dsg8v5s8e"
        },
        "name": {
          "type": "string",
          "example": "продукты"
        },
        "sign": {
          "type": "string",
          "enum": [
            "expenses",
            "incomes"
          ],
          "example": "expenses"
        }
      },
      "xml": {
        "name": "Category"
      }
    },
    "Transaction": {
      "type": "object",
      "properties": {
        "owner": {
          "type": "object",
          "$ref": "#/definitions/User"
        },
        "category": {
          "type": "object",
          "$ref": "#/definitions/Category"
        },
        "date": {
          "type": "integer"
        },
        "year":{
          "type": "number"
        },
        "month": {
          "type": "number"
        },
        "day": {
          "type": "number"
        },
        "description": {
          "type": "string",
          "example": "text"
        },
        "value": {
          "type": "number",
          "example": "00.00"
        }
      },
      "xml": {
        "name": "Transaction"
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "description": "Auto generated by MongoDB"
        },
        "name": {
          "type": "string",
          "example": "Joi"
        },
        "email": {
          "type": "string",
          "example": "joi@mail.com"
        },
        "password": {
          "type": "string",
          "example": "qwerty"
        }
      },
      "xml": {
        "name": "User"
      }
    },
    "Credentials": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "joi@mail.com"
        },
        "password": {
          "type": "string",
          "example": "qwerty"
        }
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "Error message"
        }
      }
    }
  }
}